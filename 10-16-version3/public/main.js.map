{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list-component.css","webpack:///./src/app/components/problem-list/problem-list-component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'JS world';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport  {HttpModule} from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\n\nimport {routing} from './app.routes';\n\nimport {DataService} from './services/data.service';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { EditorComponent } from './components/editor/editor.component';\n\n\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport {AuthService} from \"./services/auth.service\";\nimport {AuthGuardService} from \"./services/auth-guard.service\";\nimport{ CollaborationService} from \"./services/collaboration.service\";\nimport { ProfileComponent } from './components/profile/profile.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    ProfileComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  },\n    {\n      provide: \"auth\",\n      useClass: AuthService\n    },{\n      provide: \"authGuard\",\n      useClass: AuthGuardService\n    },{\n      provide: \"collaboration\",\n      useClass: CollaborationService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Router, RouterModule, Routes} from '@angular/router';\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport {ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\nimport {ProfileComponent} from \"./components/profile/profile.component\";\nimport {AuthGuardService} from \"./services/auth-guard.service\";\n\nconst routes:Routes = [\n  {\n    path: \"\",\n    redirectTo: \"problems\",\n    pathMatch: \"full\"\n  },\n  {\n    path:\"problems\",\n    component: ProblemListComponent\n  },\n  {\n    path: \"problems/:id\",\n    component: ProblemDetailComponent\n  },\n  {\n    path: \"profile\",\n    component: ProfileComponent,\n    canActivate:[AuthGuardService]\n\n  },\n  {\n    path:\"**\",\n    redirectTo:\"problems\",\n  }\n\n];\n\n\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"@media screen {\\n  #editor {\\n    height:600px;\\n  }\\n  .lang-select{\\n    width:100px;\\n    margin-right:10px;\\n  }\\n  header .btn{\\n    margin: 0 5px;\\n  }\\n\\n  footer .btn{\\n    margin: 0 5px;\\n  }\\n\\n  .editor-footer{\\n    margin: 10px 0;\\n\\n  }\\n\\n  .editor-header{\\n    margin:10px 0;\\n  }\\n\\n  .cursor{\\n\\n    background:rgba(0,250,0,0.5);\\n    z-index:40;\\n    width:2px!important\\n  }\\n}\\n\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n      <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\">\\n      </span>\\n    </button>\\n\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n            <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Reset</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the window, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div id=\\\"editor\\\"></div>\\n  </div>\\n\\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n\\n\\n</section>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\n\nimport {ActivatedRoute,Params} from \"@angular/router\";\n\ndeclare var ace:any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\n  editor: any;\n\n  public languages: string[] = ['Java','C++', 'Python'];\n  language:string='Java';\n\n\n\n\n  sessionId: string;\n  defaultContent = {\n    'Java': `public class Example{\n      public static void main(String[] args){\n      //type your code here\n      }\n    }`,\n    'C++': `#include<iostream>\n            using namespace std;\n            int main(){\n        //Type your C++ code here\n        return 0;\n    }`,\n    'Python': `class Solution:\n    def example():\n        #write your Python code here`\n\n  }\n\n  constructor(@Inject('collaboration') private collaboration,\n              private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(params => {\n        this.sessionId = params['id'];\n        this.initEditor();\n      });\n  }\n  initEditor(){\n    this.editor = ace.edit('editor');\n    this.editor.setTheme('ace/theme/eclipse');\n    this.resetEditor();\n    this.editor.$blockScrolling = Infinity;\n\n\n    document.getElementsByTagName('textarea')[0].focus();\n\n    this.collaboration.init(this.editor,this.sessionId);\n    this.editor.lastAppliedChange = null;\n\n    this.editor.on('change', (e) => {\n      console.log('editor changes:' + JSON.stringify(e));\n      if(this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e));\n      }\n    });\n  }\n\n\n  setLanguage(language: string): void{\n    this.language = language;\n    this.resetEditor();\n  }\n\n  resetEditor(): void{\n    this.editor.getSession().setMode('ace/mode/' + this.language.toLowerCase());\n    this.editor.setValue(this.defaultContent[this.language]);\n  }\n\n  submit():void{\n    let userCode = this.editor.getValue();\n    console.log(userCode);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <form class = \\\"navbar-form\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"!auth.authenticated()\\\"(click)=\\\"login()\\\">Sign in</button>\\n          </form>\\n\\n        </li>\\n\\n\\n\\n        <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"auth.authenticated()\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            {{username}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/profile\\\">My Profile</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My favorites</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Submissions</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">Log Out</a>\\n          </div>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n\\n\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Problem\\\" aria-label=\\\"Search\\\">\\n      </form>\\n    </div>\\n  </nav>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {FormControl} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  title = \"LY-code\";\n\n  username = \"lyuan11\";\n\n  constructor(@Inject('auth') private auth) { }\n\n  ngOnInit() {\n    if(this.auth.authenticated()){\n      this.username = this.auth.getProfile().nickname;\n    }\n\n  }\n\n  login():void {\n    this.auth.login()\n              .then(profile => this.username = profile.nickname);\n\n  }\n\n\n  logout():void {\n      this.auth.logout();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"authGuard.isAdmin()\\\">\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class = \\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id = \\\"problemName\\\"\\n      name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n\\n    <div class = \\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id = \\\"problemDesc\\\"\\n      name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class = \\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select  class=\\\"form-control\\\" id = \\\"difficulty\\\"\\n      name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option value=\\\"\\\" disabled selected>Select Difficulty</option>\\n      <option *ngFor=\\\"let difficulty of difficulties\\\" [value] =\\\"difficulty\\\">\\n        {{difficulty}}\\n      </option>\\n    </select>\\n    </div>\\n    <div class = \\\"row\\\">\\n      <div class = \\\"col-md-12\\\">\\n        <button type = \\\"submit\\\" class= \\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\" > Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\n\n\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id:0,\n  name:\"\",\n  desc:\"\",\n  difficulty:\"\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = [\"Easy\",\"Medium\",\"Hard\",\"Super\"];\n\n  newProblem: Problem = Object.assign({},DEFAULT_PROBLEM);\n\n  constructor(@Inject(\"data\") private data,\n              @Inject(\"authGuard\") private authGuard) { }\n\n  ngOnInit() {\n  }\n\n  addProblem():void{\n    this.data.addProblem(this.newProblem)\n      .catch(error => console.log(error._body));\n    this.newProblem = Object.assign({},DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class =\\\" container\\\" *ngIf=\\\"problem\\\">\\n  <div class = \\\"col-xs-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n  <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n    <app-editor></app-editor>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject} from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {ActivatedRoute,Params} from '@angular/router';\n\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n\n  problem: Problem;\n\n\n\n\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.data.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class = \\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n        <div class = \\\"list-group\\\">\\n          <a class = \\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems',problem.id]\\\">\\n            <span class = \\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty }}</span>\\n            <strong class = \\\"title\\\">{{problem.id }},{{problem.name }}</strong>\\n          </a>\\n        </div>\\n   </div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\nimport {PROBLEMS} from '../../mock-problems';\nimport { Subscription} from 'rxjs';\n\n\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list-component.html',\n  styleUrls: ['./problem-list-component.css']\n})\n\nexport class ProblemListComponent implements OnInit {\n  \n  problems: Problem[] = [];\n  subscriptionProblems: Subscription;\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n                                .subscribe(problems => this.problems = problems);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li class=\\\"active\\\"><a data-toggle=\\\"pill\\\" href=\\\"#profile\\\">Personal Information</a></li>\\n    <li><a data-toggle=\\\"pill\\\" href=\\\"#password\\\">Change Password</a></li>\\n  </ul>\\n\\n  <div class=\\\"tab-content\\\">\\n    <div id=\\\"profile\\\" class=\\\"tab-pane fade in active\\\">\\n      <div class = \\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id = \\\"email\\\"\\n               name=\\\"email\\\" disabled value = \\\"{{email}}\\\" >\\n      </div>\\n      <div class = \\\"form-group\\\">\\n        <label for=\\\"username\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id = \\\"username\\\"\\n               name=\\\"username\\\" disabled value = \\\"{{username}}\\\" >\\n      </div>\\n    </div>\\n    <div id=\\\"password\\\" class=\\\"tab-pane fade\\\">\\n      <form class = \\\"navbar-form\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"resetPassword()\\\">Reset Password via email</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, Inject, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  email: string = '';\n  username: string = '';\n\n\n\n  constructor(@Inject('auth') private auth) { }\n\n  ngOnInit() {\n    let profile = this.auth.getProfile();\n    this.email = profile.email;\n    this.username = profile.nickname;\n  }\n  resetPassword(){\n    this.auth.resetPassword();\n  }\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Router, CanActivate} from \"@angular/router\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate{\n\n  constructor(@Inject('auth') private auth ,private router: Router) { }\n\n  canActivate(): boolean{\n    if(this.auth.authenticated()){\n      return true;\n    } else {\n      //redirect to home page if not logged in\n      this.router.navigate(['/problems']);\n      return false;\n    }\n\n  }\n\n\n  isAdmin(): boolean{\n    if(this.auth.authenticated() && this.auth.getProfile().roles.includes('Admin')){\n      return true;\n    }else{\n      return false;\n    }\n  }\n}\n","\n\n// app/auth.service.ts\n\nimport { Injectable }      from '@angular/core';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {HttpHeaders} from \"@angular/common/http\";\n\n// Avoid name not found warnings\ndeclare var Auth0Lock: any;\n\n@Injectable()\nexport class AuthService {\n  // Configure Auth0\n // auth0 = new auth0.WebAuth({\n//     clientID: '9VSFNNP6-8ZjhxaBUMOD-_WlSEeHziCP',\n//     domain: 'lyuan11.auth0.com',\n//     responseType: 'token id_token',\n//     redirectUri: 'http://localhost:3000/callback',\n//     scope: 'openid'\n//   });\n//\n//   constructor(public router: Router) {}\n//\n//   public login(): void {\n//     this.auth0.authorize();\n//   }\n\n  // var webAuth = new auth0.WebAuth({\n  //   domain: 'YOUR_AUTH0_DOMAIN',\n  //   clientID: 'YOUR_CLIENT_ID'\n  // });\n\n\n  lock = new Auth0Lock('9VSFNNP6-8ZjhxaBUMOD-_WlSEeHziCP', 'lyuan11.auth0.com');\n\n  constructor(private http: Http) {\n\n  }\n\n  public login(): Promise<Object> {\n    return new Promise((resolve, reject) => {\n      // Call the show method to display the widget.\n\n      this.lock.show((error: string, profile: Object, id_token: string) => {\n        if (error) {\n          reject(error);\n        } else {\n          localStorage.setItem('profile', JSON.stringify(profile));\n          localStorage.setItem('id_token', id_token);\n          resolve(profile);\n        }\n      });\n    })\n  }\n\n  public authenticated() {\n    // Check if there's an unexpired JWT\n    // This searches for an item in localStorage with key == 'id_token'\n    return tokenNotExpired();\n  }\n\n  public logout() {\n    // Remove token from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('profile');\n  }\n\n  public getProfile() {\n    return JSON.parse(localStorage.getItem('profile'));\n  }\n\n  public resetPassword(): void {\n    let profile = this.getProfile();\n    let url: string = `https://lyuan11.auth0.com/dbconnections/change_password`;\n    const headers = new HttpHeaders({'content-type': 'application/json' });\n    let body = {\n      client_id: '9VSFNNP6-8ZjhxaBUMOD-_WlSEeHziCP',\n      email: profile.email,\n      connection: 'Username-Password-Authentication'\n    }\n\n    // @ts-ignore\n    this.http.post(url, body, headers)\n      .toPromise()\n      .then((res: Response) => {\n        console.log(res.json());\n      })\n      .catch(this.handleError);\n\n\n  }\n  private handleError(error: any): Promise<any> {\n    console.error('Error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n}\n\n\n\n// // src/app/auth/auth.service.ts\n//\n// import { Injectable } from '@angular/core';\n// import { Router } from '@angular/router';\n// import {tokenNotExpired} from \"angular2-jwt\";\n// import * as auth0 from 'auth0-js';\n// import { Http, Response, Headers} from '@angular/http';\n// import 'rxjs/add/operator/toPromise';\n// import { HttpClient, HttpHeaders } from \"@angular/common/http\";\n//\n// declare var Auth0Lock: any;\n//\n// @Injectable()\n// export class AuthService {\n//   //Configure Auth0\n//   // clientID = 'BKzRoPPzNpfVBmdgaCc2MOlhcSkV8kFX';\n//   //domain = 'lyuan11.auth0.com';\n//   private auth0: any;\n//\n//   lock = new auth0.WebAuth({\n//     clientID: '9VSFNNP6-8ZjhxaBUMOD-_WlSEeHziCP',\n//     domain: 'lyuan11.auth0.com',\n//     responseType: 'token id_token',\n//     redirectUri: 'http://localhost:3000/callback',\n//     scope: 'openid'\n//   });\n//\n//\n//   // lock = new Auth0Lock(this.clientID, this.domain, {});\n//\n//   constructor(private http: Http) {\n//     //Add callback for lock 'authenticated' event\n//   }\n//\n//   public login(): Promise<Object> {\n//     return new Promise((resolve, reject) => {\n//       this.lock.show((error: string, profile: Object, id_token: string) => {\n//         if (error) {\n//           reject(error);\n//         } else {\n//           localStorage.setItem('profile', JSON.stringify(profile));\n//           localStorage.setItem('id_token', id_token);\n//           resolve(profile);\n//         }\n//       });\n//\n//     });\n//   }\n//\n//\n//   public authenticated() {\n//     return tokenNotExpired();\n//   }\n//\n//   public logout() {\n//     localStorage.removeItem('id_token');\n//     localStorage.removeItem('profile');\n//   }\n//\n//   public getProfile() {\n//     return JSON.parse(localStorage.getItem('profile'));\n//   }\n//\n//   public resetPassword() :void{\n//     let profile = this.getProfile();\n//     let url: string = `https://lyuan11.auth0.com/dbconnections/change_password`;\n//     const headers = new HttpHeaders({'content-type': 'application/json' });\n//     let body = {\n//       client_id: '9VSFNNP6-8ZjhxaBUMOD-_WlSEeHziCP',\n//       email: profile.email,\n//       connection: 'Username-Password-Authentication'\n//     }\n//\n//     this.http.post(url,body, headers)\n//       .toPromise()\n//       .then((res:Response) => {\n//         console.log(res.json());\n//       })\n//       .catch(this.handleError);\n//   }\n//\n//   private handleError(error:any): Promise<any>{\n//     console.error('Error occurred', error);\n//     return Promise.reject(error.message || error);\n//   }\n//\n//   // var request = require(\"request\");\n//   //\n//   // var options = { method: 'POST',\n//   //   url: 'https://YOUR_AUTH0_DOMAIN/dbconnections/change_password',\n//   //   headers: { 'content-type': 'application/json' },\n//   //   body:\n//   //     { client_id: 'YOUR_CLIENT_ID',\n//   //       email: '',\n//   //       connection: 'Username-Password-Authentication' },\n//   //   json: true };\n//   //\n//   // request(options, function (error, response, body) {\n//   //   if (error) throw new Error(error);\n//   //\n//   //   console.log(body);\n//   // });\n//\n// }\n//\n// //\n// // import { filter } from 'rxjs/operators';\n// // import * as auth0 from 'auth0-js';\n// //\n// // (window as any).global = window;\n// //\n// // @Injectable()\n// // export class AuthService {\n// //\n// //   auth0 = new auth0.WebAuth({\n// //     clientID: '9VSFNNP6-8ZjhxaBUMOD-_WlSEeHziCP',\n// //     domain: 'lyuan11.auth0.com',\n// //     responseType: 'token id_token',\n// //     redirectUri: 'http://localhost:3000/callback',\n// //     scope: 'openid'\n// //   });\n// //\n// //   constructor(public router: Router) {}\n// //\n// //   public login(): void {\n// //     this.auth0.authorize();\n// //   }\n// //\n// //\n// //\n// // }\n","import { Injectable } from '@angular/core';\n\n\ndeclare var io: any;\n\n@Injectable()\nexport class CollaborationService {\n\n  collaborationSocket: any;\n\n  constructor() { }\n\n  init(editor: any, sessionId: string):void{\n    this.collaborationSocket = io(window.location.origin,{query: 'sessionId=' + sessionId});\n\n    this.collaborationSocket.on(\"change\",(delta:string) => {\n      console.log('collaboration: editor changed by' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n\n\n    this.collaborationSocket.on(\"message\",(message) => {\n      console.log(\"received: \" + message);\n    })\n  }\n  change(delta: string):void{\n    this.collaborationSocket.emit(\"change\", delta);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {PROBLEMS} from '../mock-problems';\nimport { Problem} from '../models/problem.model';\nimport { Http, Response, Headers} from '@angular/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable()\nexport class DataService {\n\n\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: Http) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get('api/v1/problems')\n      .toPromise()\n      .then((res: Response) => {\n        this.problemsSource.next(res.json());\n      })\n      .catch(this.handleError);\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: Response) => res.json())\n      .catch(this.handleError);\n  }\n  addProblem(problem: Problem): Promise<Problem> {\n    const headers = new HttpHeaders({'content-type': 'application/json' });\n    // @ts-ignore\n    return this.http.post('/api/v1/problems', problem, headers)\n      .toPromise()\n      .then((res: Response) => {\n        this.getProblems();\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n      console.error('An error occurred', error); // for demo purposes only\n      return Promise.reject(error.body || error);\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}